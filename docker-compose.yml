version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: movie_app
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d movie_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: backend_app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_USER: app_user
      DB_PASSWORD: ${POSTGRES_PASSWORD:-app_password}
      DB_NAME: movie_app
      DB_PORT: 5432
      JWT_SECRET: ${JWT_SECRET:-my_super_secret_jwt_key_for_development_12345}
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm start

  frontend:
    build: ./pwa
    container_name: frontend_app
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    volumes:
      - ./pwa:/app
      - /app/node_modules
    command: npm start

volumes:
  postgres_data:
